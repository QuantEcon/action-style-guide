name: Style Guide Comment Trigger

# This workflow triggers when someone comments on an issue with @quantecon-style-guide
# Also triggers on issue creation/editing to catch the trigger in the initial description
on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]

jobs:
  check-trigger:
    # Only run if comment contains the trigger phrase
    if: contains(github.event.comment.body, '@quantecon-style-guide') || contains(github.event.issue.body, '@quantecon-style-guide')
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
      issues: read
    
    steps:
      - name: React to comment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            })
      
      - name: Run style guide checker
        uses: QuantEcon/action-style-guide@v1
        with:
          mode: 'single'
          lectures-path: 'lectures/'
          style-guide-url: 'https://raw.githubusercontent.com/QuantEcon/action-style-guide/main/style-guide-database.md'
          # Use Claude as default (best results)
          llm-provider: 'claude'
          anthropic-api-key: ${{ secrets.ANTHROPIC_API_KEY }}
          # Alternative: Use OpenAI
          # llm-provider: 'openai'
          # openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          # Alternative: Use Gemini
          # llm-provider: 'gemini'
          # google-api-key: ${{ secrets.GOOGLE_API_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-body: ${{ github.event.comment.body || github.event.issue.body }}
          create-pr: 'true'
      
      - name: Comment on issue with results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const result = '${{ steps.run-checker.outputs.pr-url }}';
            if (result) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: `✅ Style guide review complete!\n\nPR created: ${result}`
              })
            } else {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: `✅ Style guide review complete! No issues found or no PR created.`
              })
            }
